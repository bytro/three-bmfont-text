{"version":3,"file":"three-bmfont-text.umd.js","sources":["../node_modules/word-wrapper/index.js","../node_modules/xtend/immutable.js","../node_modules/as-number/index.js","../node_modules/layout-bmfont-text/index.js","../node_modules/dtype/index.js","../node_modules/an-array/index.js","../node_modules/is-buffer/index.js","../node_modules/quad-indices/index.js","../lib/utils.ts","../index.ts","../lib/vertices.ts"],"sourcesContent":["var newline = /\\n/\nvar newlineChar = '\\n'\nvar whitespace = /\\s/\n\nmodule.exports = function(text, opt) {\n    var lines = module.exports.lines(text, opt)\n    return lines.map(function(line) {\n        return text.substring(line.start, line.end)\n    }).join('\\n')\n}\n\nmodule.exports.lines = function wordwrap(text, opt) {\n    opt = opt||{}\n\n    //zero width results in nothing visible\n    if (opt.width === 0 && opt.mode !== 'nowrap') \n        return []\n\n    text = text||''\n    var width = typeof opt.width === 'number' ? opt.width : Number.MAX_VALUE\n    var start = Math.max(0, opt.start||0)\n    var end = typeof opt.end === 'number' ? opt.end : text.length\n    var mode = opt.mode\n\n    var measure = opt.measure || monospace\n    if (mode === 'pre')\n        return pre(measure, text, start, end, width)\n    else\n        return greedy(measure, text, start, end, width, mode)\n}\n\nfunction idxOf(text, chr, start, end) {\n    var idx = text.indexOf(chr, start)\n    if (idx === -1 || idx > end)\n        return end\n    return idx\n}\n\nfunction isWhitespace(chr) {\n    return whitespace.test(chr)\n}\n\nfunction pre(measure, text, start, end, width) {\n    var lines = []\n    var lineStart = start\n    for (var i=start; i<end && i<text.length; i++) {\n        var chr = text.charAt(i)\n        var isNewline = newline.test(chr)\n\n        //If we've reached a newline, then step down a line\n        //Or if we've reached the EOF\n        if (isNewline || i===end-1) {\n            var lineEnd = isNewline ? i : i+1\n            var measured = measure(text, lineStart, lineEnd, width)\n            lines.push(measured)\n            \n            lineStart = i+1\n        }\n    }\n    return lines\n}\n\nfunction greedy(measure, text, start, end, width, mode) {\n    //A greedy word wrapper based on LibGDX algorithm\n    //https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n    var lines = []\n\n    var testWidth = width\n    //if 'nowrap' is specified, we only wrap on newline chars\n    if (mode === 'nowrap')\n        testWidth = Number.MAX_VALUE\n\n    while (start < end && start < text.length) {\n        //get next newline position\n        var newLine = idxOf(text, newlineChar, start, end)\n\n        //eat whitespace at start of line\n        while (start < newLine) {\n            if (!isWhitespace( text.charAt(start) ))\n                break\n            start++\n        }\n\n        //determine visible # of glyphs for the available width\n        var measured = measure(text, start, newLine, testWidth)\n\n        var lineEnd = start + (measured.end-measured.start)\n        var nextStart = lineEnd + newlineChar.length\n\n        //if we had to cut the line before the next newline...\n        if (lineEnd < newLine) {\n            //find char to break on\n            while (lineEnd > start) {\n                if (isWhitespace(text.charAt(lineEnd)))\n                    break\n                lineEnd--\n            }\n            if (lineEnd === start) {\n                if (nextStart > start + newlineChar.length) nextStart--\n                lineEnd = nextStart // If no characters to break, show all.\n            } else {\n                nextStart = lineEnd\n                //eat whitespace at end of line\n                while (lineEnd > start) {\n                    if (!isWhitespace(text.charAt(lineEnd - newlineChar.length)))\n                        break\n                    lineEnd--\n                }\n            }\n        }\n        if (lineEnd >= start) {\n            var result = measure(text, start, lineEnd, testWidth)\n            lines.push(result)\n        }\n        start = nextStart\n    }\n    return lines\n}\n\n//determines the visible number of glyphs within a given width\nfunction monospace(text, start, end, width) {\n    var glyphs = Math.min(width, end-start)\n    return {\n        start: start,\n        end: start+glyphs\n    }\n}","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","module.exports = function numtype(num, def) {\n\treturn typeof num === 'number'\n\t\t? num \n\t\t: (typeof def === 'number' ? def : 0)\n}","var wordWrap = require('word-wrapper')\nvar xtend = require('xtend')\nvar number = require('as-number')\n\nvar X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z']\nvar M_WIDTHS = ['m', 'w']\nvar CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n\n\nvar TAB_ID = '\\t'.charCodeAt(0)\nvar SPACE_ID = ' '.charCodeAt(0)\nvar ALIGN_LEFT = 0, \n    ALIGN_CENTER = 1, \n    ALIGN_RIGHT = 2\n\nmodule.exports = function createLayout(opt) {\n  return new TextLayout(opt)\n}\n\nfunction TextLayout(opt) {\n  this.glyphs = []\n  this._measure = this.computeMetrics.bind(this)\n  this.update(opt)\n}\n\nTextLayout.prototype.update = function(opt) {\n  opt = xtend({\n    measure: this._measure\n  }, opt)\n  this._opt = opt\n  this._opt.tabSize = number(this._opt.tabSize, 4)\n\n  if (!opt.font)\n    throw new Error('must provide a valid bitmap font')\n\n  var glyphs = this.glyphs\n  var text = opt.text||'' \n  var font = opt.font\n  this._setupSpaceGlyphs(font)\n  \n  var lines = wordWrap.lines(text, opt)\n  var minWidth = opt.width || 0\n\n  //clear glyphs\n  glyphs.length = 0\n\n  //get max line width\n  var maxLineWidth = lines.reduce(function(prev, line) {\n    return Math.max(prev, line.width, minWidth)\n  }, 0)\n\n  //the pen position\n  var x = 0\n  var y = 0\n  var lineHeight = number(opt.lineHeight, font.common.lineHeight)\n  var baseline = font.common.base\n  var descender = lineHeight-baseline\n  var letterSpacing = opt.letterSpacing || 0\n  var height = lineHeight * lines.length - descender\n  var align = getAlignType(this._opt.align)\n\n  //draw text along baseline\n  y -= height\n  \n  //the metrics for this text layout\n  this._width = maxLineWidth\n  this._height = height\n  this._descender = lineHeight - baseline\n  this._baseline = baseline\n  this._xHeight = getXHeight(font)\n  this._capHeight = getCapHeight(font)\n  this._lineHeight = lineHeight\n  this._ascender = lineHeight - descender - this._xHeight\n    \n  //layout each glyph\n  var self = this\n  lines.forEach(function(line, lineIndex) {\n    var start = line.start\n    var end = line.end\n    var lineWidth = line.width\n    var lastGlyph\n    \n    //for each glyph in that line...\n    for (var i=start; i<end; i++) {\n      var id = text.charCodeAt(i)\n      var glyph = self.getGlyph(font, id)\n      if (glyph) {\n        if (lastGlyph) \n          x += getKerning(font, lastGlyph.id, glyph.id)\n\n        var tx = x\n        if (align === ALIGN_CENTER) \n          tx += (maxLineWidth-lineWidth)/2\n        else if (align === ALIGN_RIGHT)\n          tx += (maxLineWidth-lineWidth)\n\n        glyphs.push({\n          position: [tx, y],\n          data: glyph,\n          index: i,\n          line: lineIndex\n        })  \n\n        //move pen forward\n        x += glyph.xadvance + letterSpacing\n        lastGlyph = glyph\n      }\n    }\n\n    //next line down\n    y += lineHeight\n    x = 0\n  })\n  this._linesTotal = lines.length;\n}\n\nTextLayout.prototype._setupSpaceGlyphs = function(font) {\n  //These are fallbacks, when the font doesn't include\n  //' ' or '\\t' glyphs\n  this._fallbackSpaceGlyph = null\n  this._fallbackTabGlyph = null\n\n  if (!font.chars || font.chars.length === 0)\n    return\n\n  //try to get space glyph\n  //then fall back to the 'm' or 'w' glyphs\n  //then fall back to the first glyph available\n  var space = getGlyphById(font, SPACE_ID) \n          || getMGlyph(font) \n          || font.chars[0]\n\n  //and create a fallback for tab\n  var tabWidth = this._opt.tabSize * space.xadvance\n  this._fallbackSpaceGlyph = space\n  this._fallbackTabGlyph = xtend(space, {\n    x: 0, y: 0, xadvance: tabWidth, id: TAB_ID, \n    xoffset: 0, yoffset: 0, width: 0, height: 0\n  })\n}\n\nTextLayout.prototype.getGlyph = function(font, id) {\n  var glyph = getGlyphById(font, id)\n  if (glyph)\n    return glyph\n  else if (id === TAB_ID) \n    return this._fallbackTabGlyph\n  else if (id === SPACE_ID) \n    return this._fallbackSpaceGlyph\n  return null\n}\n\nTextLayout.prototype.computeMetrics = function(text, start, end, width) {\n  var letterSpacing = this._opt.letterSpacing || 0\n  var font = this._opt.font\n  var curPen = 0\n  var curWidth = 0\n  var count = 0\n  var glyph\n  var lastGlyph\n\n  if (!font.chars || font.chars.length === 0) {\n    return {\n      start: start,\n      end: start,\n      width: 0\n    }\n  }\n\n  end = Math.min(text.length, end)\n  for (var i=start; i < end; i++) {\n    var id = text.charCodeAt(i)\n    var glyph = this.getGlyph(font, id)\n\n    if (glyph) {\n      //move pen forward\n      var xoff = glyph.xoffset\n      var kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0\n      curPen += kern\n\n      var nextPen = curPen + glyph.xadvance + letterSpacing\n      var nextWidth = curPen + glyph.width\n\n      //we've hit our limit; we can't move onto the next glyph\n      if (nextWidth >= width || nextPen >= width)\n        break\n\n      //otherwise continue along our line\n      curPen = nextPen\n      curWidth = nextWidth\n      lastGlyph = glyph\n    }\n    count++\n  }\n  \n  //make sure rightmost edge lines up with rendered glyphs\n  if (lastGlyph)\n    curWidth += lastGlyph.xoffset\n\n  return {\n    start: start,\n    end: start + count,\n    width: curWidth\n  }\n}\n\n//getters for the private vars\n;['width', 'height', \n  'descender', 'ascender',\n  'xHeight', 'baseline',\n  'capHeight',\n  'lineHeight' ].forEach(addGetter)\n\nfunction addGetter(name) {\n  Object.defineProperty(TextLayout.prototype, name, {\n    get: wrapper(name),\n    configurable: true\n  })\n}\n\n//create lookups for private vars\nfunction wrapper(name) {\n  return (new Function([\n    'return function '+name+'() {',\n    '  return this._'+name,\n    '}'\n  ].join('\\n')))()\n}\n\nfunction getGlyphById(font, id) {\n  if (!font.chars || font.chars.length === 0)\n    return null\n\n  var glyphIdx = findChar(font.chars, id)\n  if (glyphIdx >= 0)\n    return font.chars[glyphIdx]\n  return null\n}\n\nfunction getXHeight(font) {\n  for (var i=0; i<X_HEIGHTS.length; i++) {\n    var id = X_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getMGlyph(font) {\n  for (var i=0; i<M_WIDTHS.length; i++) {\n    var id = M_WIDTHS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx]\n  }\n  return 0\n}\n\nfunction getCapHeight(font) {\n  for (var i=0; i<CAP_HEIGHTS.length; i++) {\n    var id = CAP_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getKerning(font, left, right) {\n  if (!font.kernings || font.kernings.length === 0)\n    return 0\n\n  var table = font.kernings\n  for (var i=0; i<table.length; i++) {\n    var kern = table[i]\n    if (kern.first === left && kern.second === right)\n      return kern.amount\n  }\n  return 0\n}\n\nfunction getAlignType(align) {\n  if (align === 'center')\n    return ALIGN_CENTER\n  else if (align === 'right')\n    return ALIGN_RIGHT\n  return ALIGN_LEFT\n}\n\nfunction findChar (array, value, start) {\n  start = start || 0\n  for (var i = start; i < array.length; i++) {\n    if (array[i].id === value) {\n      return i\n    }\n  }\n  return -1\n}","module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n    case 'uint8_clamped':\n      return Uint8ClampedArray\n  }\n}\n","var str = Object.prototype.toString\n\nmodule.exports = anArray\n\nfunction anArray(arr) {\n  return (\n       arr.BYTES_PER_ELEMENT\n    && str.call(arr.buffer) === '[object ArrayBuffer]'\n    || Array.isArray(arr)\n  )\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var dtype = require('dtype')\nvar anArray = require('an-array')\nvar isBuffer = require('is-buffer')\n\nvar CW = [0, 2, 3]\nvar CCW = [2, 1, 3]\n\nmodule.exports = function createQuadElements(array, opt) {\n    //if user didn't specify an output array\n    if (!array || !(anArray(array) || isBuffer(array))) {\n        opt = array || {}\n        array = null\n    }\n\n    if (typeof opt === 'number') //backwards-compatible\n        opt = { count: opt }\n    else\n        opt = opt || {}\n\n    var type = typeof opt.type === 'string' ? opt.type : 'uint16'\n    var count = typeof opt.count === 'number' ? opt.count : 1\n    var start = (opt.start || 0) \n\n    var dir = opt.clockwise !== false ? CW : CCW,\n        a = dir[0], \n        b = dir[1],\n        c = dir[2]\n\n    var numIndices = count * 6\n\n    var indices = array || new (dtype(type))(numIndices)\n    for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {\n        var x = i + start\n        indices[x + 0] = j + 0\n        indices[x + 1] = j + 1\n        indices[x + 2] = j + 2\n        indices[x + 3] = j + a\n        indices[x + 4] = j + b\n        indices[x + 5] = j + c\n    }\n    return indices\n}","import { Box3, Sphere } from 'three';\n\nconst itemSize = 2;\n\nfunction bounds(positions: ArrayLike<number>) {\n    const count = positions.length / itemSize;\n    const box = { min: [positions[0], positions[1]], max: [positions[0], positions[1]] };\n\n    for (let i = 0; i < count; i++) {\n        const x = positions[i * itemSize + 0];\n        const y = positions[i * itemSize + 1];\n        box.min[0] = Math.min(x, box.min[0]);\n        box.min[1] = Math.min(y, box.min[1]);\n        box.max[0] = Math.max(x, box.max[0]);\n        box.max[1] = Math.max(y, box.max[1]);\n    }\n\n    return box;\n}\n\nexport function computeBox(positions: ArrayLike<number>, output: Box3): void {\n    const box = bounds(positions);\n    output.min.set(box.min[0], box.min[1], 0);\n    output.max.set(box.max[0], box.max[1], 0);\n}\n\nexport function computeSphere(positions: ArrayLike<number>, output: Sphere): void {\n    const box = bounds(positions);\n    const minX = box.min[0];\n    const minY = box.min[1];\n    const maxX = box.max[0];\n    const maxY = box.max[1];\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const length = Math.sqrt(width * width + height * height);\n    output.center.set(minX + width / 2, minY + height / 2, 0);\n    output.radius = length / 2;\n}\n","import createLayout from 'layout-bmfont-text';\nimport type { Glyph, TextLayout, TextOptions } from 'layout-bmfont-text-types';\nimport createQuadElements from 'quad-indices';\nimport { Box3, BufferAttribute, BufferGeometry, Sphere } from 'three';\n\nimport { computeBox, computeSphere } from './lib/utils';\nimport { computePositions, computeUvs } from './lib/vertices';\n\n/**\n * Port of https://github.com/Jam3/three-bmfont-text/\n */\nexport class TextGeometry extends BufferGeometry {\n    public layout: TextLayout;\n    public visibleGlyphs: Glyph[];\n\n    constructor(opt: TextOptions) {\n        super();\n        this.update(opt);\n    }\n\n    update(opt: TextOptions): void {\n        if (!opt.font) {\n            throw new TypeError('must specify a { font } in options');\n        }\n        this.layout = createLayout(opt);\n\n        // get vec2 texcoords\n        const flipY = opt.flipY !== false;\n\n        // the desired BMFont data\n        const { font } = opt;\n\n        // determine texture size from font file\n        const texWidth = font.common.scaleW;\n        const texHeight = font.common.scaleH;\n\n        // get visible glyphs\n        const glyphs = this.layout.glyphs.filter(glyph => {\n            const bitmap = glyph.data;\n            return bitmap.width * bitmap.height > 0;\n        });\n\n        // provide visible glyphs for convenience\n        this.visibleGlyphs = glyphs;\n\n        // get common vertex data\n        const positions = computePositions(glyphs);\n        const uvs = computeUvs(glyphs, texWidth, texHeight, flipY);\n        const indices = createQuadElements({\n            clockwise: true,\n            type: 'uint16',\n            count: glyphs.length,\n        });\n\n        // update vertex data\n        this.setIndex(indices)\n        this.setAttribute('position', new BufferAttribute(positions, 2))\n        this.setAttribute('uv', new BufferAttribute(uvs, 2))\n\n        // update multipage data\n        if ('page' in this.attributes) {\n            // disable multipage rendering\n            this.deleteAttribute('page');\n        }\n    }\n\n    computeBoundingSphere() {\n        if (!this.boundingSphere) {\n            this.boundingSphere = new Sphere();\n        }\n        const positions = this.attributes.position.array;\n        const { itemSize } = this.attributes.position;\n        if (!positions || !itemSize || positions.length < 2) {\n            this.boundingSphere.radius = 0;\n            this.boundingSphere.center.set(0, 0, 0);\n            return;\n        }\n        computeSphere(positions, this.boundingSphere);\n    }\n\n    computeBoundingBox() {\n        if (!this.boundingBox) {\n            this.boundingBox = new Box3();\n        }\n        const positions = this.attributes.position.array;\n        const { itemSize } = this.attributes.position;\n        if (!positions || !itemSize || positions.length < 2) {\n            this.boundingBox.makeEmpty();\n            return;\n        }\n        computeBox(positions, this.boundingBox);\n    }\n}\n","import type { Glyph } from 'layout-bmfont-text-types';\n\nexport function computePositions(glyphs: Glyph[]): ArrayLike<number> {\n    const positions = new Float32Array(glyphs.length * 4 * 2);\n    let i = 0;\n    glyphs.forEach(glyph => {\n        const bitmap = glyph.data;\n\n        // bottom left position\n        const x = glyph.position[0] + bitmap.xoffset;\n        const y = glyph.position[1] + bitmap.yoffset;\n\n        // quad size\n        const w = bitmap.width;\n        const h = bitmap.height;\n\n        // BL\n        positions[i++] = x;\n        positions[i++] = y;\n        // TL\n        positions[i++] = x;\n        positions[i++] = y + h;\n        // TR\n        positions[i++] = x + w;\n        positions[i++] = y + h;\n        // BR\n        positions[i++] = x + w;\n        positions[i++] = y;\n    });\n    return positions;\n}\n\nexport function computeUvs(\n    glyphs: Glyph[],\n    texWidth: number,\n    texHeight: number,\n    flipY: boolean\n): ArrayLike<number> {\n    const uvs = new Float32Array(glyphs.length * 4 * 2);\n    let i = 0;\n    glyphs.forEach(glyph => {\n        const bitmap = glyph.data;\n        const bw = bitmap.x + bitmap.width;\n        const bh = bitmap.y + bitmap.height;\n\n        // top left position\n        const u0 = bitmap.x / texWidth;\n        let v1 = bitmap.y / texHeight;\n        const u1 = bw / texWidth;\n        let v0 = bh / texHeight;\n\n        if (flipY) {\n            v1 = (texHeight - bitmap.y) / texHeight;\n            v0 = (texHeight - bh) / texHeight;\n        }\n\n        // BL\n        uvs[i++] = u0;\n        uvs[i++] = v1;\n        // TL\n        uvs[i++] = u0;\n        uvs[i++] = v0;\n        // TR\n        uvs[i++] = u1;\n        uvs[i++] = v0;\n        // BR\n        uvs[i++] = u1;\n        uvs[i++] = v1;\n    });\n    return uvs;\n}\n"],"names":["newline","whitespace","idxOf","text","chr","start","end","idx","indexOf","isWhitespace","test","monospace","width","Math","min","module","opt","exports","lines","map","line","substring","join","mode","Number","MAX_VALUE","max","length","measure","lineStart","i","charAt","isNewline","measured","push","pre","testWidth","newLine","lineEnd","nextStart","result","greedy","target","arguments","source","key","hasOwnProperty","call","Object","prototype","num","def","X_HEIGHTS","M_WIDTHS","CAP_HEIGHTS","TAB_ID","charCodeAt","SPACE_ID","TextLayout","this","glyphs","_measure","computeMetrics","bind","update","wrapper","name","Function","getGlyphById","font","id","chars","glyphIdx","findChar","getKerning","left","right","kernings","table","kern","first","second","amount","array","value","xtend","_opt","tabSize","number","Error","_setupSpaceGlyphs","wordWrap","minWidth","maxLineWidth","reduce","prev","x","y","lineHeight","common","baseline","base","descender","letterSpacing","height","align","getAlignType","_width","_height","_descender","_baseline","_xHeight","getXHeight","_capHeight","getCapHeight","_lineHeight","_ascender","self","forEach","lineIndex","lastGlyph","lineWidth","glyph","getGlyph","tx","position","data","index","xadvance","_linesTotal","_fallbackSpaceGlyph","_fallbackTabGlyph","space","getMGlyph","tabWidth","xoffset","yoffset","curPen","curWidth","count","nextPen","nextWidth","defineProperty","get","configurable","str","toString","isBuffer","obj","constructor","CW","CCW","bounds","positions","box","_this","TypeError","layout","createLayout","flipY","texWidth","scaleW","texHeight","scaleH","filter","bitmap","visibleGlyphs","Float32Array","w","h","computePositions","uvs","bh","u0","v1","u1","v0","computeUvs","indices","arr","BYTES_PER_ELEMENT","buffer","Array","isArray","readFloatLE","slice","isSlowBuffer","_isBuffer","dir","clockwise","a","b","c","numIndices","dtype","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float64Array","Uint8ClampedArray","type","j","createQuadElements","setIndex","setAttribute","BufferAttribute","attributes","deleteAttribute","computeBoundingSphere","boundingSphere","Sphere","itemSize","radius","center","set","output","minX","minY","sqrt","computeSphere","computeBoundingBox","boundingBox","Box3","makeEmpty","computeBox","BufferGeometry"],"mappings":"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"}